# pyOCD debugger
# Copyright (c) 2006-2013 Arm Limited
# Copyright (c) 2021 Chris Reed
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)
from ...debug.svd.loader import SVDFile

FLASH_ALGO = {
    'load_address' : 0x20400000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0xb085b480, 0x60f8af00, 0x607a60b9, 0x4a3c4b3b, 0x20e4f8c3, 0xf44f4b39, 0x601a6270, 0xf44f4b39,
    0x605a4200, 0xf44f4b38, 0x605a4200, 0x4a384b37, 0x20e4f8c3, 0x6b1b4b35, 0x0303f023, 0xf0434a33,
    0x63130301, 0x4b31bf00, 0xf0036e9b, 0x2b000308, 0x4b2ed0f9, 0x4a2d6b1b, 0x0370f023, 0xbf006313,
    0x6e9b4b2a, 0x0308f003, 0xd0f92b00, 0x6a1a4b27, 0x4b284926, 0x620b4313, 0x4b24bf00, 0xf4036e9b,
    0x2b003300, 0x4b21d0f9, 0x4a236a1b, 0x491f401a, 0x43134b22, 0x4b1d620b, 0x4b216a1a, 0x4a1b4013,
    0x135cf443, 0xbf006213, 0x6e9b4b18, 0x3380f403, 0xd0f92b00, 0x6b1b4b15, 0x0303f023, 0xf0434a13,
    0x63130301, 0x4b11bf00, 0xf0036e9b, 0x2b000308, 0x4b0ed0f9, 0x631a2201, 0x4b0cbf00, 0xf0036e9b,
    0x2b000308, 0x4b09d0f9, 0xf8c34a0e, 0x230020e4, 0x37144618, 0xbc8046bd, 0xbf004770, 0x400e0c00,
    0x45464300, 0x400e1850, 0x400e1900, 0x400e0600, 0x504d4300, 0x00370008, 0xffc8ff8f, 0x00370020,
    0xfec8ffff, 0x504d4301, 0xb085b480, 0x6078af00, 0x2b02687b, 0x4b13d11c, 0x605a4a13, 0x4b11bf00,
    0xf003689b, 0x2b000301, 0x4b0ed0f9, 0x60fb68db, 0xf00368fb, 0x2b000302, 0x4b0ad10a, 0x605a4a0b,
    0xbf00e000, 0x689b4b07, 0x0301f003, 0xd0f82b00, 0x4a074b04, 0x20e4f8c3, 0x46182300, 0x46bd3714,
    0x4770bc80, 0x400e0c00, 0x5a00000d, 0x5a00010b, 0x45464301, 0xb085b480, 0x2300af00, 0xe02860fb,
    0x015b68fb, 0x2300607b, 0xe01c60bb, 0x687b68ba, 0x021b4413, 0x401a4a19, 0x4b1a4919, 0x604b4313,
    0xbf00e000, 0x689b4b16, 0x0301f003, 0xd0f82b00, 0x689b4b13, 0x030ef003, 0xd0012b00, 0xe0172301,
    0x330168bb, 0x68bb60bb, 0xdddf2b1f, 0x330168fb, 0x68fb60fb, 0xddd32b7f, 0x4a0b4b09, 0xe000605a,
    0x4b07bf00, 0xf003689b, 0x2b000301, 0x2300d0f8, 0x37144618, 0xbc8046bd, 0xbf004770, 0x00ffff00,
    0x400e0c00, 0x5a000009, 0x5a000005, 0xb085b480, 0x6078af00, 0x60fb4b1c, 0xf5a3687b, 0x0a5b0380,
    0x68bb60bb, 0x0303f043, 0x68bb60bb, 0x4a17021b, 0x4b17401a, 0x68fa4313, 0xe0006053, 0x68fbbf00,
    0xf003689b, 0x2b000301, 0x68bbd0f8, 0x4a0f021b, 0x4b10401a, 0x68fa4313, 0xe0006053, 0x68fbbf00,
    0xf003689b, 0x2b000301, 0x68fbd0f8, 0xf003689b, 0x2b00030e, 0x2301d001, 0x2300e000, 0x37144618,
    0xbc8046bd, 0xbf004770, 0x400e0c00, 0x00ffff00, 0x5a000009, 0x5a000007, 0xb08db480, 0x60f8af00,
    0x607a60b9, 0x0a5b68bb, 0x2300623b, 0xe05962fb, 0x61fb687b, 0xf5a368fb, 0x0a5b0380, 0x68fb61bb,
    0x2300617b, 0xe00c62bb, 0x009b6abb, 0x441a69fa, 0x009b6abb, 0x440b6979, 0x601a6812, 0x33016abb,
    0x6abb62bb, 0xddef2b7f, 0x021b69bb, 0x401a4a22, 0x4b234922, 0x604b4313, 0xbf00e000, 0x689b4b1f,
    0x0301f003, 0xd0f82b00, 0x689b4b1c, 0x030ef003, 0xd0012b00, 0xe02a2301, 0x627b2300, 0x6a7be014,
    0x697a009b, 0x681a4413, 0x009b6a7b, 0x440b69f9, 0x429a681b, 0x6a7bd005, 0x461a009b, 0x441368fb,
    0x6a7be015, 0x627b3301, 0x2b7f6a7b, 0x68fbdde7, 0x7300f503, 0x687b60fb, 0x7300f503, 0x6afb607b,
    0x62fb3301, 0x6a3b6afa, 0xdba1429a, 0x46182300, 0x46bd3734, 0x4770bc80, 0x00ffff00, 0x400e0c00,
    0x5a000001, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20400005,
    'pc_unInit': 0x2040012d,
    'pc_program_page': 0x204002bd,
    'pc_erase_sector': 0x20400231,
    'pc_eraseAll': 0x20400199,

    'static_base' : 0x20400000 + 0x00000004 + 0x000003b0,
    'begin_stack' : 0x204005b8,
    'begin_data' : 0x20400000 + 0x1000,
    'page_size' : 0x4000,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    'min_program_length' : 0x4000,

    # Relative region addresses and sizes
    'ro_start': 0x0,
    'ro_size': 0x3b0,
    'rw_start': 0x3b0,
    'rw_size': 0x0,
    'zi_start': 0x3b0,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x400000,
    'flash_size': 0x200000,
    'sector_sizes': (
        (0x0, 0x2000),
    )
}

class SAME70(CoreSightTarget):

    VENDOR = "Michrochip"

    MEMORY_MAP = MemoryMap(
        FlashRegion(    start=0x00400000,  length=0x00200000,      blocksize=0x4000, is_boot_memory=True,
            algo=FLASH_ALGO),
        RamRegion(      start=0x20400000,  length=0x8000)
        )

    def __init__(self, session):
        super(SAME70, self).__init__(session, self.MEMORY_MAP)
        self._svd_location = SVDFile.from_builtin("ATSAME70Q21B.svd")

